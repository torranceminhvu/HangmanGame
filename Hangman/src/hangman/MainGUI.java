package hangman;

import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;
import javax.swing.JTextField;
import javax.swing.ImageIcon;

/*
 *  Program created by Minh Vu
 * 
 * 
 */
/**
 *
 * @author Minh
 */
public class MainGUI extends javax.swing.JFrame {

    private LetterRack letterRack;
    private int imageCount;
    private boolean gameOver;

    /**
     * Creates new form MainGUI
     *
     * @param m
     */
    public MainGUI(String m) {
        initComponents();
        letterRack = new LetterRack(m);
        imageCount = 2;
        gameOver = false;
        mysteryWordText.setText(letterRack.getMatchedSoFar());
        setGuessAvailText();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        hangmanLabel = new javax.swing.JLabel();
        titleLabel = new javax.swing.JLabel();
        retryButton = new javax.swing.JButton();
        newGameButton = new javax.swing.JButton();
        guessedLettersPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        guessedLettersText = new javax.swing.JTextPane();
        availableLettersPanel = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        availableLettersText = new javax.swing.JTextPane();
        inputPanel = new javax.swing.JPanel();
        inputText = new javax.swing.JTextField();
        guessButton = new javax.swing.JButton();
        mysteryWordPanel = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        mysteryWordText = new javax.swing.JTextPane();
        jScrollPane6 = new javax.swing.JScrollPane();
        infoText = new javax.swing.JTextPane();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Hangman Game");
        setResizable(false);

        hangmanLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hangman/images/hangman1.png"))); // NOI18N

        titleLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        titleLabel.setText("  Hangman Game Created By Minh Vu --- Version 1.0");
        titleLabel.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(0, 153, 255)));

        retryButton.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        retryButton.setText("Retry Game");

        newGameButton.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        newGameButton.setText("New Game");

        guessedLettersPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Guessed Letters", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 2, 12))); // NOI18N

        guessedLettersText.setEditable(false);
        jScrollPane2.setViewportView(guessedLettersText);

        javax.swing.GroupLayout guessedLettersPanelLayout = new javax.swing.GroupLayout(guessedLettersPanel);
        guessedLettersPanel.setLayout(guessedLettersPanelLayout);
        guessedLettersPanelLayout.setHorizontalGroup(
            guessedLettersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(guessedLettersPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 584, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        guessedLettersPanelLayout.setVerticalGroup(
            guessedLettersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(guessedLettersPanelLayout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 8, Short.MAX_VALUE))
        );

        availableLettersPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Available Letters", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 2, 12))); // NOI18N
        availableLettersPanel.setPreferredSize(new java.awt.Dimension(626, 76));

        availableLettersText.setEditable(false);
        jScrollPane3.setViewportView(availableLettersText);

        javax.swing.GroupLayout availableLettersPanelLayout = new javax.swing.GroupLayout(availableLettersPanel);
        availableLettersPanel.setLayout(availableLettersPanelLayout);
        availableLettersPanelLayout.setHorizontalGroup(
            availableLettersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(availableLettersPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3)
                .addContainerGap())
        );
        availableLettersPanelLayout.setVerticalGroup(
            availableLettersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(availableLettersPanelLayout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 25, Short.MAX_VALUE))
        );

        inputPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Enter A Letter Or Word To Guess, Then Hit the Button", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 3, 18))); // NOI18N

        inputText.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N

        guessButton.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        guessButton.setText("GUESS!");
        guessButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                guessButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout inputPanelLayout = new javax.swing.GroupLayout(inputPanel);
        inputPanel.setLayout(inputPanelLayout);
        inputPanelLayout.setHorizontalGroup(
            inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inputPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(inputText, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(guessButton, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        inputPanelLayout.setVerticalGroup(
            inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, inputPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(guessButton, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
                    .addComponent(inputText))
                .addContainerGap())
        );

        mysteryWordPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Mystery Word", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 2, 16))); // NOI18N

        mysteryWordText.setEditable(false);
        mysteryWordText.setBackground(new java.awt.Color(240, 240, 240));
        mysteryWordText.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        mysteryWordText.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jScrollPane4.setViewportView(mysteryWordText);

        infoText.setEditable(false);
        infoText.setBackground(new java.awt.Color(240, 240, 240));
        jScrollPane6.setViewportView(infoText);

        javax.swing.GroupLayout mysteryWordPanelLayout = new javax.swing.GroupLayout(mysteryWordPanel);
        mysteryWordPanel.setLayout(mysteryWordPanelLayout);
        mysteryWordPanelLayout.setHorizontalGroup(
            mysteryWordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mysteryWordPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mysteryWordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane6)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE))
                .addContainerGap())
        );
        mysteryWordPanelLayout.setVerticalGroup(
            mysteryWordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mysteryWordPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 73, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 642, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(retryButton, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(newGameButton, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(35, 35, 35)
                                .addComponent(hangmanLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(29, 29, 29)
                                .addComponent(mysteryWordPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(guessedLettersPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(availableLettersPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(inputPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(hangmanLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(retryButton, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(newGameButton, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(mysteryWordPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(guessedLettersPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(availableLettersPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(inputPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(79, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void guessButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_guessButtonMouseClicked
        String guess = inputText.getText().toLowerCase();
        // checks if game needs to be restarted
        if (gameOver == false) {
            // guessed word
            if (guess.length() > 1) {
                if (letterRack.guessWord(guess) == true) {
                    JOptionPane.showMessageDialog(null, "You've Guessed The Word Correctly! Please Press The New Game Button to Start a New Game", "CORRECT!!!!", JOptionPane.INFORMATION_MESSAGE);
                    mysteryWordText.setText(letterRack.getMystery());
                    inputText.setText("");
                    gameOver = true;
                } else {
                    setHangman();
                    infoText.setText("You've Guessed The Word Incorrectly! Please Try Again");
                    inputText.setText("");
                }
                // guessed char
            } else {
                int check = letterRack.guessChar(guess.charAt(0));
                // guessed correctly
                if (check == 1) {
                    mysteryWordText.setText(letterRack.getMatchedSoFar());;
                    if (letterRack.isSolved() == true) {
                        JOptionPane.showMessageDialog(null, "You've Matched The Whole Word Correctly! Please Press The New Game Button to Start a New Game", "CORRECT!!!!", JOptionPane.INFORMATION_MESSAGE);
                        mysteryWordText.setText(letterRack.getMystery());
                        setGuessAvailText();
                        inputText.setText("");
                        gameOver = true;
                    } else {
                        infoText.setText("The Guessed Letter Has Been Matched, Please Continue!");
                        setGuessAvailText();
                        inputText.setText("");
                    }
                    // already guessed this character
                } else if (check == -1) {
                    infoText.setText("The Guessed Letter Has Already Been Used, Please Select Another!");
                    inputText.setText("");
                    // guessed incorrectly
                } else {
                    setHangman();
                    setGuessAvailText();
                    infoText.setText("The Guessed Letter Is Not Correct! Please Try Again");
                    inputText.setText("");
                }
            }
        }
    }//GEN-LAST:event_guessButtonMouseClicked

    public String customAvailableText() {
        StringBuilder avail = new StringBuilder();
        for (int i = 0; i < letterRack.getAvailableLetters().length(); i++) {
            avail.append(letterRack.getAvailableLetters().charAt(i));
            avail.append(" ");
        }
        return avail.toString().toUpperCase();
    }

    public String customGuessedText() {
        StringBuilder guessed = new StringBuilder();
        for (int i = 0; i < letterRack.getGuessedLetters().length(); i++) {
            guessed.append(letterRack.getGuessedLetters().charAt(i));
            guessed.append(" ");
        }
        return guessed.toString().toUpperCase();
    }

    public void setGuessAvailText() {
        availableLettersText.setText(customAvailableText());
        guessedLettersText.setText(customGuessedText());
    }

    public void setHangman() {
        hangmanLabel.setIcon(new ImageIcon(getClass().getResource("/hangman/images/hangman" + imageCount + ".png")));
        imageCount++;
        if (imageCount > 7) {
            gameOver = true;
            JOptionPane.showMessageDialog(null, "Your Man Has Been Hanged!! Please Press the New Game Button To Start A New Game", "DEATH!!!!", JOptionPane.INFORMATION_MESSAGE);
            infoText.setText("You've Lost The Game, Please Start A New Game!");
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        final int MAX_WORD_SIZE = 15;
        final int MIN_WORD_SIZE = 3;

        JLabel jmystery = new JLabel("Please enter the word to be guessed! (No Spaces)");
        JTextField mystery = new JPasswordField();
        Object[] ob = {jmystery, mystery};
        int result = JOptionPane.showConfirmDialog(null, ob, "Starting Game...", JOptionPane.OK_CANCEL_OPTION);

        if (result == JOptionPane.OK_OPTION) {
            String word = mystery.getText().toLowerCase();
            if (word.length() > MAX_WORD_SIZE || word.length() <= MIN_WORD_SIZE) {
                JOptionPane.showMessageDialog(null, "The inputted word must be more than 3 characters and less than 16 characters long!");
            } else {
                /* Create and display the form */
                java.awt.EventQueue.invokeLater(new Runnable() {
                    public void run() {
                        new MainGUI(word).setVisible(true);
                    }
                });
            }
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel availableLettersPanel;
    private javax.swing.JTextPane availableLettersText;
    private javax.swing.JButton guessButton;
    private javax.swing.JPanel guessedLettersPanel;
    private javax.swing.JTextPane guessedLettersText;
    private javax.swing.JLabel hangmanLabel;
    private javax.swing.JTextPane infoText;
    private javax.swing.JPanel inputPanel;
    private javax.swing.JTextField inputText;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JPanel mysteryWordPanel;
    private javax.swing.JTextPane mysteryWordText;
    private javax.swing.JButton newGameButton;
    private javax.swing.JButton retryButton;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables
}
